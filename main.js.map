{"version":3,"sources":["webpack://battleship/./src/computerPlayer.js","webpack://battleship/./src/domManipulation.js","webpack://battleship/./src/game.js","webpack://battleship/./src/gameboard.js","webpack://battleship/./src/humanPlayer.js","webpack://battleship/./src/player.js","webpack://battleship/./src/ship.js","webpack://battleship/webpack/bootstrap","webpack://battleship/./src/index.js"],"names":["Player","module","exports","constructor","_name","super","this","tiles","makeArrayOfTiles","placeShips","ship","Object","values","gameboard","ships","validPosition","position","generatePosition","randomRotation","id","placeShip","shipId","Math","random","rotate","floor","setNextOutgoingAttack","shuffleArray","nextOutgoingAttack","pop","array","sort","a","b","i","push","showShotedWaterTiles","playerGameboard","DOMBoardId","tileId","tilesShoted","water","document","getElementById","classList","add","showShotedHitTiles","hit","createBoard","DOMboardId","boardContainer","tile","createElement","setAttribute","appendChild","renderPlayerBoard","keys","tilesWithShips","showShips","renderEnemyBoard","enemyGameboard","sunkShips","sunkTile","remove","showSunkShipTiles","Human","Computer","_player1Type","_p1name","_player2Type","_p2name","player1","createPlayer","player2","relatePlayers","gameEnded","winner","getGameEnded","getWinner","_playerType","_playerName","Error","setEnemy","gameTurn","play","checkEndGame","allShipsSank","setWinner","Ship","addShip","shipLenght","getId","setPosition","possibleTiles","receiveAttack","coordinate","includes","isSunk","Gameboard","name","enemy","createShips","j","getNextOutgoingAttack","_enemy","getEnemy","deleteEnemy","_length","setId","length","hits","sunk","horizontal","currentId","_position","setTiles","row","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","Game","dom","game","attackTile","e","path","split","console","log","removeEventListener","childNodes","forEach","addEventListener"],"mappings":"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","file":"main.js","sourcesContent":["const Player = require('./player')\r\n\r\nclass Computer extends Player {\r\n    constructor(_name) {\r\n        super(_name)\r\n        this.tiles = this.makeArrayOfTiles()\r\n    }\r\n\r\n    placeShips() {\r\n        for (let ship of Object.values(this.gameboard.ships)) {\r\n            let validPosition = false\r\n            while (!validPosition) {\r\n                let position = this.generatePosition()\r\n                this.randomRotation(ship.id)\r\n                validPosition = this.gameboard.placeShip(ship.id, position)\r\n            }\r\n        }\r\n    }\r\n\r\n    randomRotation(shipId) {\r\n        if (Math.random() < 0.5) {\r\n            this.gameboard.ships[shipId].rotate()\r\n        }\r\n    }\r\n\r\n    generatePosition() {\r\n        return Math.floor(Math.random() * 100)\r\n    }\r\n\r\n    setNextOutgoingAttack() {\r\n        this.tiles = this.shuffleArray(this.tiles)\r\n        this.nextOutgoingAttack = this.tiles.pop()\r\n    }\r\n\r\n    shuffleArray(array) {\r\n        array.sort((a, b) => 0.5 - Math.random())\r\n        return array\r\n    }\r\n\r\n    makeArrayOfTiles() {\r\n        let array = []\r\n        for (let i = 0; i < 100; i++) {\r\n            array.push(i)\r\n        }\r\n        return array\r\n    }\r\n}\r\n\r\nmodule.exports = Computer\r\n","function createBoard(DOMboardId) {\r\n    const boardContainer = document.getElementById(DOMboardId);\r\n    for (let i = 0; i < 100; i++) {\r\n        let tile = document.createElement('div')\r\n        tile.setAttribute('id', `${DOMboardId}-${i}`)\r\n        tile.classList.add('tile')\r\n        boardContainer.appendChild(tile)\r\n    }\r\n}\r\n\r\nfunction renderPlayerBoard(playerGameboard, DOMBoardId) {\r\n    showShips(playerGameboard, DOMBoardId)\r\n    showShotedWaterTiles(playerGameboard, DOMBoardId)\r\n    showShotedHitTiles(playerGameboard, DOMBoardId)\r\n}\r\n\r\nfunction renderEnemyBoard(enemyGameboard, DOMBoardId) {\r\n    showShotedWaterTiles(enemyGameboard, DOMBoardId)\r\n    showShotedHitTiles(enemyGameboard, DOMBoardId)\r\n    showSunkShipTiles(enemyGameboard, DOMBoardId)\r\n}\r\n\r\nfunction showShips(playerGameboard, DOMBoardId) {\r\n    for (tileId of Object.keys(playerGameboard.tilesWithShips)) {\r\n        let tileWithShip = document.getElementById(`${DOMBoardId}-${tileId}`)\r\n        tileWithShip.classList.add('tile-ship')\r\n    }\r\n}\r\n\r\nfunction showShotedWaterTiles(playerGameboard, DOMBoardId) {\r\n    for (tileId of playerGameboard.tilesShoted.water) {\r\n        let tileWithShip = document.getElementById(`${DOMBoardId}-${tileId}`)\r\n        tileWithShip.classList.add('tile-water')\r\n    }\r\n}\r\n\r\nfunction showShotedHitTiles(playerGameboard, DOMBoardId) {\r\n    for (tileId of playerGameboard.tilesShoted.hit) {\r\n        let tileWithShip = document.getElementById(`${DOMBoardId}-${tileId}`)\r\n        tileWithShip.classList.add('tile-hit')\r\n    }\r\n}\r\n\r\nfunction showSunkShipTiles(playerGameboard, DOMBoardId) {\r\n    let sunkShips = playerGameboard.sunkShips()\r\n    for (shipId of sunkShips) {\r\n        for (tile of Object.keys(playerGameboard.tilesWithShips)) {\r\n            if (playerGameboard.tilesWithShips[tile] === shipId) {\r\n                let sunkTile = document.getElementById(`${DOMBoardId}-${tile}`)\r\n                sunkTile.classList.remove('tile-hit')\r\n                sunkTile.classList.add('tile-sunk')\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = { createBoard, renderPlayerBoard, renderEnemyBoard }\r\n","const Human = require('./humanPlayer')\r\nconst Computer = require('./computerPlayer')\r\n\r\nclass Game {\r\n    constructor(_player1Type, _p1name, _player2Type, _p2name) {\r\n        this.player1 = this.createPlayer(_player1Type, _p1name)\r\n        this.player2 = this.createPlayer(_player2Type, _p2name)\r\n        this.relatePlayers()\r\n        this.gameEnded = false\r\n        this.winner = null\r\n    }\r\n\r\n    getGameEnded() {\r\n        return this.gameEnded\r\n    }\r\n\r\n    getWinner() {\r\n        return this.winner\r\n    }\r\n\r\n    createPlayer(_playerType, _playerName) {\r\n        if (_playerType === 'human') {\r\n            return new Human(_playerName)\r\n        } else if (_playerType === 'computer') {\r\n            return new Computer(_playerName)\r\n        } else {\r\n            throw new Error('type of player not valid. Must be \"human\" or \"computer\"')\r\n        }\r\n    }\r\n\r\n    relatePlayers() {\r\n        this.player1.setEnemy(this.player2)\r\n        this.player2.setEnemy(this.player1)\r\n    }\r\n\r\n    gameTurn() {\r\n        if (this.player1 instanceof Human && this.player2 instanceof Computer) {\r\n            this.player1.play()\r\n            this.player2.setNextOutgoingAttack()\r\n            this.player2.play()\r\n        } else if (this.player1 instanceof Computer && this.player2 instanceof Computer) {\r\n            this.player1.setNextOutgoingAttack()\r\n            this.player1.play()\r\n            this.player2.setNextOutgoingAttack()\r\n            this.player2.play()\r\n        } else if (this.player1 instanceof Human && this.player2 instanceof Human) {\r\n            if (this.player1.nextOutgoingAttack) {\r\n                this.player1.play()\r\n            } else if (this.player2.nextOutgoingAttack) {\r\n                this.player2.play()\r\n                this.checkEndGame()\r\n            }\r\n        }\r\n    }\r\n\r\n    checkEndGame() {\r\n        if (this.player1.gameboard.allShipsSank() || this.player2.gameboard.allShipsSank()) {\r\n            this.gameEnded = true\r\n            this.setWinner()\r\n        }\r\n    }\r\n\r\n    setWinner() {\r\n        if (this.player1.gameboard.allShipsSank() && this.player2.gameboard.allShipsSank()) {\r\n            this.winner = 'tie'\r\n        } else if (this.player1.gameboard.allShipsSank()) {\r\n            this.winner = this.player2\r\n        } else if (this.player2.gameboard.allShipsSank()) {\r\n            this.winner = this.player1\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = Game\r\n","const Ship = require('./ship');\r\n\r\nclass Gameboard {\r\n\r\n    constructor() {\r\n        this.ships = {}\r\n        this.tilesWithShips = {}\r\n        this.tilesShoted = {'water': [], 'hit': []}\r\n    }\r\n\r\n    addShip(shipLenght) {\r\n        let ship = new Ship(shipLenght)\r\n        this.ships[ship.getId()] = ship\r\n        return this.ships[ship.getId()]\r\n    }\r\n\r\n    placeShip(shipId, position) {\r\n        let tiles = this.ships[shipId].setPosition(position)\r\n        let possibleTiles = {}\r\n        for (const tile of tiles) {\r\n            if (!(tile in this.tilesWithShips)) {\r\n                possibleTiles[tile] = shipId\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n        this.tilesWithShips = { ...this.tilesWithShips, ...possibleTiles }\r\n        return true\r\n    }\r\n\r\n    receiveAttack(coordinate) {\r\n        if (this.tilesShoted.water.includes(coordinate) || this.tilesShoted.hit.includes(coordinate)) {\r\n            return false\r\n        }\r\n        if (coordinate in this.tilesWithShips) {\r\n            const shipId = this.tilesWithShips[coordinate]\r\n            this.ships[shipId].hit()\r\n            this.tilesShoted.hit.push(coordinate)\r\n            return true\r\n        }\r\n        this.tilesShoted.water.push(coordinate)\r\n        return true\r\n    }\r\n\r\n    allShipsSank() {\r\n        for (const ship of Object.values(this.ships)) {\r\n            if (!ship.isSunk()) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n\r\n    sunkShips() {\r\n        let sunkShips = []\r\n        for (const ship of Object.values(this.ships)) {\r\n            if (ship.isSunk()) {\r\n                sunkShips.push(ship.id)\r\n            }\r\n        }\r\n        return sunkShips\r\n    }\r\n}\r\n\r\nmodule.exports = Gameboard\r\n","const Player = require('./player')\r\n\r\nclass Human extends Player {\r\n    constructor(_name) {\r\n        super(_name)\r\n    }\r\n\r\n    placeShips() {\r\n        return null\r\n    }\r\n\r\n    setNextOutgoingAttack(coordinate) {\r\n        this.nextOutgoingAttack = coordinate\r\n    }\r\n}\r\n\r\nmodule.exports = Human\r\n","const Gameboard = require('./gameboard')\r\n\r\nclass Player {\r\n    constructor(_name) {\r\n        this.name = _name\r\n        this.gameboard = new Gameboard()\r\n        this.nextOutgoingAttack = null\r\n        this.enemy = null\r\n    }\r\n\r\n    createShips() {\r\n        for (let i = 2; i < 6; i++) {\r\n            for (let j = 1; j < 7 - i; j++) {\r\n                this.gameboard.addShip(i)\r\n            }\r\n        }\r\n    }\r\n\r\n    placeShips() {\r\n        return null\r\n    }\r\n\r\n    setNextOutgoingAttack() {\r\n        // setea el proximo ataque, este va a variar en humanos y computadora\r\n        return null\r\n    }\r\n\r\n    getNextOutgoingAttack() {\r\n        return this.nextOutgoingAttack\r\n    }\r\n\r\n    setEnemy(_enemy) {\r\n        this.enemy = _enemy\r\n    }\r\n\r\n    getEnemy() {\r\n        return this.enemy\r\n    }\r\n\r\n    deleteEnemy() {\r\n        this.enemy = null\r\n    }\r\n\r\n    play() {\r\n        let coordinate = this.getNextOutgoingAttack()\r\n        this.enemy.gameboard.receiveAttack(coordinate)\r\n        this.nextOutgoingAttack = null\r\n    }\r\n}\r\n\r\nmodule.exports = Player\r\n","\r\nclass Ship {\r\n\r\n    static currentId = -1\r\n\r\n    constructor(_length) {\r\n        if (_length <= 0 || 6 <= _length) {\r\n            throw new Error('Ship length must be between 1 and 5')\r\n        }\r\n        this.id = this.setId()\r\n        this.length = _length\r\n        this.hits = 0\r\n        this.sunk = false\r\n        this.horizontal = true\r\n        this.position = -1\r\n    }\r\n\r\n    setId() {\r\n        Ship.currentId++\r\n        return Ship.currentId\r\n    }\r\n\r\n    getId() {\r\n        return this.id\r\n    }\r\n\r\n    hit() {\r\n        this.hits += 1\r\n        return this\r\n    }\r\n\r\n    isSunk() {\r\n        if (this.hits === this.length) {\r\n            this.sunk = true\r\n            return this.sunk\r\n        }\r\n        return this.sunk\r\n    }\r\n\r\n    setPosition(_position) {\r\n        if (_position < 0 || _position > 99) { throw new Error('position not valid') }\r\n        this.position = _position\r\n        let tiles = this.setTiles()\r\n        return tiles\r\n    }\r\n\r\n    setTiles() {\r\n        let tiles = []\r\n        if (this.horizontal) {\r\n            const row = Math.floor(this.position / 10)\r\n            let i = 0\r\n            let j = 1\r\n            while (i < this.length) {\r\n                if (Math.floor((this.position + i) / 10) === row) {\r\n                    tiles.push(this.position + i)\r\n                } else {\r\n                    tiles.push(this.position - j)\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        } else {\r\n            let i = 0\r\n            let j = 1\r\n            while (i < this.length) {\r\n                if (this.position + (i * 10) < 100) {\r\n                    tiles.push(this.position + (i * 10))\r\n                } else {\r\n                    tiles.push(this.position - (j * 10))\r\n                    j++\r\n                }\r\n                i++\r\n            }\r\n        }\r\n        return tiles\r\n    }\r\n\r\n    rotate() {\r\n        this.horizontal = !this.horizontal\r\n        this.setTiles()\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Ship\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const Game = require('./game')\r\nconst dom = require('./domManipulation')\r\n\r\nconst game = new Game('human', 'human1', 'computer', 'cpu2')\r\n\r\ngame.player1.createShips()\r\ngame.player1.placeShips()\r\ngame.player2.createShips()\r\ngame.player2.placeShips()\r\n\r\ndom.createBoard('P1Board')\r\ndom.createBoard('P1enemyBoard')\r\n\r\nconst P1enemyBoard = document.getElementById('P1enemyBoard').childNodes\r\n\r\nP1enemyBoard.forEach(tile => {\r\n    tile.addEventListener('click', attackTile)\r\n})\r\n\r\nfunction attackTile(e) {\r\n    let tileId = e.path[0].id.split('-')[1]\r\n    game.player1.setNextOutgoingAttack(tileId)\r\n    gameLoop()\r\n    this.removeEventListener('click', attackTile)\r\n}\r\n\r\nfunction gameLoop() {\r\n    game.gameTurn()\r\n    dom.renderPlayerBoard(game.player1.gameboard, 'P1Board')\r\n    dom.renderEnemyBoard(game.player2.gameboard, 'P1enemyBoard')\r\n    if (game.getGameEnded()) {\r\n        console.log(game.winner)\r\n    }\r\n}\r\n"],"sourceRoot":""}