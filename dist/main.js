(()=>{var t={289:(t,e,i)=>{const s=i(507);t.exports=class extends s{constructor(t){super(t),this.tiles=this.makeArrayOfTiles()}placeShips(){for(let t of Object.values(this.gameboard.ships)){let e=!1;for(;!e;){let i=this.generatePosition();this.randomRotation(t.id),e=this.gameboard.placeShip(t.id,i)}}}randomRotation(t){Math.random()<.5&&this.gameboard.ships[t].rotate()}generatePosition(){return Math.floor(100*Math.random())}setNextOutgoingAttack(){this.tiles=this.shuffleArray(this.tiles),this.nextOutgoingAttack=this.tiles.pop()}shuffleArray(t){return t.sort(((t,e)=>.5-Math.random())),t}makeArrayOfTiles(){let t=[];for(let e=0;e<100;e++)t.push(e);return t}}},998:t=>{function e(t,e){for(tileId of t.tilesShoted.water)document.getElementById(`${e}-${tileId}`).classList.add("tile-water")}function i(t,e){for(tileId of t.tilesShoted.hit)document.getElementById(`${e}-${tileId}`).classList.add("tile-hit")}t.exports={createBoard:function(t){const e=document.getElementById(t);for(let i=0;i<100;i++){let s=document.createElement("div");s.setAttribute("id",`${t}-${i}`),s.classList.add("tile"),e.appendChild(s)}},renderPlayerBoard:function(t,s){!function(t,e){for(tileId of Object.keys(t.tilesWithShips))document.getElementById(`${e}-${tileId}`).classList.add("tile-ship")}(t,s),e(t,s),i(t,s)},renderEnemyBoard:function(t,s){e(t,s),i(t,s),function(t,e){let i=t.sunkShips();for(shipId of i)for(tile of Object.keys(t.tilesWithShips))if(t.tilesWithShips[tile]===shipId){let t=document.getElementById(`${e}-${tile}`);t.classList.remove("tile-hit"),t.classList.add("tile-sunk")}}(t,s)}}},417:(t,e,i)=>{const s=i(390),r=i(289);t.exports=class{constructor(t,e,i,s){this.player1=this.createPlayer(t,e),this.player2=this.createPlayer(i,s),this.relatePlayers(),this.gameEnded=!1,this.winner=null}getGameEnded(){return this.gameEnded}getWinner(){return this.winner}createPlayer(t,e){if("human"===t)return new s(e);if("computer"===t)return new r(e);throw new Error('type of player not valid. Must be "human" or "computer"')}relatePlayers(){this.player1.setEnemy(this.player2),this.player2.setEnemy(this.player1)}gameTurn(){this.player1 instanceof s&&this.player2 instanceof r?(this.player1.play(),this.player2.setNextOutgoingAttack(),this.player2.play()):this.player1 instanceof r&&this.player2 instanceof r?(this.player1.setNextOutgoingAttack(),this.player1.play(),this.player2.setNextOutgoingAttack(),this.player2.play()):this.player1 instanceof s&&this.player2 instanceof s&&(this.player1.nextOutgoingAttack?this.player1.play():this.player2.nextOutgoingAttack&&(this.player2.play(),this.checkEndGame()))}checkEndGame(){(this.player1.gameboard.allShipsSank()||this.player2.gameboard.allShipsSank())&&(this.gameEnded=!0,this.setWinner())}setWinner(){this.player1.gameboard.allShipsSank()&&this.player2.gameboard.allShipsSank()?this.winner="tie":this.player1.gameboard.allShipsSank()?this.winner=this.player2:this.player2.gameboard.allShipsSank()&&(this.winner=this.player1)}}},498:(t,e,i)=>{const s=i(643);t.exports=class{constructor(){this.ships={},this.tilesWithShips={},this.tilesShoted={water:[],hit:[]}}addShip(t){let e=new s(t);return this.ships[e.getId()]=e,this.ships[e.getId()]}placeShip(t,e){let i=this.ships[t].setPosition(e),s={};for(const e of i){if(e in this.tilesWithShips)return!1;s[e]=t}return this.tilesWithShips={...this.tilesWithShips,...s},!0}receiveAttack(t){if(this.tilesShoted.water.includes(t)||this.tilesShoted.hit.includes(t))return!1;if(t in this.tilesWithShips){const e=this.tilesWithShips[t];return this.ships[e].hit(),this.tilesShoted.hit.push(t),!0}return this.tilesShoted.water.push(t),!0}allShipsSank(){for(const t of Object.values(this.ships))if(!t.isSunk())return!1;return!0}sunkShips(){let t=[];for(const e of Object.values(this.ships))e.isSunk()&&t.push(e.id);return t}}},390:(t,e,i)=>{const s=i(507);t.exports=class extends s{constructor(t){super(t)}placeShips(){return null}setNextOutgoingAttack(t){this.nextOutgoingAttack=t}}},507:(t,e,i)=>{const s=i(498);t.exports=class{constructor(t){this.name=t,this.gameboard=new s,this.nextOutgoingAttack=null,this.enemy=null}createShips(){for(let t=2;t<6;t++)for(let e=1;e<7-t;e++)this.gameboard.addShip(t)}placeShips(){return null}setNextOutgoingAttack(){return null}getNextOutgoingAttack(){return this.nextOutgoingAttack}setEnemy(t){this.enemy=t}getEnemy(){return this.enemy}deleteEnemy(){this.enemy=null}play(){let t=this.getNextOutgoingAttack();this.enemy.gameboard.receiveAttack(t),this.nextOutgoingAttack=null}}},643:t=>{class e{static currentId=-1;constructor(t){if(t<=0||6<=t)throw new Error("Ship length must be between 1 and 5");this.id=this.setId(),this.length=t,this.hits=0,this.sunk=!1,this.horizontal=!0,this.position=-1}setId(){return e.currentId++,e.currentId}getId(){return this.id}hit(){return this.hits+=1,this}isSunk(){return this.hits===this.length?(this.sunk=!0,this.sunk):this.sunk}setPosition(t){if(t<0||t>99)throw new Error("position not valid");return this.position=t,this.setTiles()}setTiles(){let t=[];if(this.horizontal){const e=Math.floor(this.position/10);let i=0,s=1;for(;i<this.length;)Math.floor((this.position+i)/10)===e?t.push(this.position+i):(t.push(this.position-s),s++),i++}else{let e=0,i=1;for(;e<this.length;)this.position+10*e<100?t.push(this.position+10*e):(t.push(this.position-10*i),i++),e++}return t}rotate(){this.horizontal=!this.horizontal,this.setTiles()}}t.exports=e}},e={};function i(s){var r=e[s];if(void 0!==r)return r.exports;var n=e[s]={exports:{}};return t[s](n,n.exports,i),n.exports}(()=>{const t=i(417),e=i(998),s=new t("human","human1","computer","cpu2");function r(t){let i=t.path[0].id.split("-")[1];s.player1.setNextOutgoingAttack(i),s.gameTurn(),e.renderPlayerBoard(s.player1.gameboard,"P1Board"),e.renderEnemyBoard(s.player2.gameboard,"P1enemyBoard"),s.getGameEnded()&&console.log(s.winner),this.removeEventListener("click",r)}s.player1.createShips(),s.player1.placeShips(),s.player2.createShips(),s.player2.placeShips(),e.createBoard("P1Board"),e.createBoard("P1enemyBoard"),document.getElementById("P1enemyBoard").childNodes.forEach((t=>{t.addEventListener("click",r)}))})()})();
//# sourceMappingURL=main.js.map